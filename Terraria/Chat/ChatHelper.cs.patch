--- src/decompiled/Terraria/Chat/ChatHelper.cs
+++ src/Terraria/Terraria/Chat/ChatHelper.cs
@@ -13,7 +_,12 @@
 		private static List<Tuple<string, Color>> _cachedMessages = new List<Tuple<string, Color>>();
 
 		public static void DisplayMessageOnClient(NetworkText text, Color color, int playerId) {
+#if CLIENT
 			DisplayMessage(text, color, byte.MaxValue);
+#else
+			NetPacket packet = NetTextModule.SerializeServerMessage(text,color,byte.MaxValue);
+			NetManager.Instance.SendToClient(packet,playerId);
+#endif
 		}
 
 		public static void SendChatMessageToClient(NetworkText text, Color color, int playerId) {
@@ -21,6 +_,10 @@
 		}
 
 		public static void SendChatMessageToClientAs(byte messageAuthor, NetworkText text, Color color, int playerId) {
+#if SERVER
+			NetPacket packet = NetTextModule.SerializeServerMessage(text,color,messageAuthor);
+			NetManager.Instance.SendToClient(packet,playerId);
+#endif
 			if (playerId == Main.myPlayer)
 				DisplayMessage(text, color, messageAuthor);
 		}
@@ -30,8 +_,13 @@
 		}
 
 		public static void BroadcastChatMessageAs(byte messageAuthor, NetworkText text, Color color, int excludedPlayer = -1) {
+#if CLIENT
 			if (excludedPlayer != Main.myPlayer)
 				DisplayMessage(text, color, messageAuthor);
+#else
+			NetPacket packet = NetTextModule.SerializeServerMessage(text,color,messageAuthor);
+			NetManager.Instance.Broadcast(packet,OnlySendToPlayersWhoAreLoggedIn,excludedPlayer);
+#endif
 		}
 
 		public static bool OnlySendToPlayersWhoAreLoggedIn(int clientIndex) => Netplay.Clients[clientIndex].State == 10;
